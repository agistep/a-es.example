/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id 'signing'
    id 'maven-publish'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
java {
    sourceCompatibility = 17
    targetCompatibility = 17

    withJavadocJar()
    withSourcesJar()
}
dependencies {
    api 'com.google.protobuf:protobuf-java:3.23.0'

    implementation 'org.valid4j:valid4j:0.5.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.2.12'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.5'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.5'

    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'

    testImplementation project(':event:test-supports')

}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.8.2')
        }
    }
}

jar {
    manifest {
        attributes(
                'Specification-Title': artifactName,
                'Specification-Version': artifactVersion,
                'Specification-Vendor': vendor,
                'Implementation-Title': artifactName,
                'Implementation-Version': artifactVersion,
                'Implementation-Vendor': vendor
        )
    }
}

publishing {
    repositories {
        maven {
            name "OSSRH"
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username System.getenv("MAVEN_USERNAME")
                password System.getenv("MAVEN_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId 'io.agistep'
            artifactId artifactId
            version artifactVersion
            from components.java
            pom {
                name = "gamja"
                description = "gamja"
                url = "https://github.com/agistep/a-es.example"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://github.com/agistep/a-es.example/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "len"
                        name = "jeonggyu"
                        email = "joenggyu0@gmail.com"
                    }
                }
                scm {
                    connection = "https://github.com/agistep/a-es.example.git"
                    developerConnection = "https://github.com/agistep/a-es.example.git"
                    url = "https://github.com/agistep/a-es.example"
                }
            }
        }
    }
}

signing {
    def signingKey = System.getenv("SIGNING_KEY")
    def signingPassword = System.getenv("SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}

